{"version":3,"sources":["utils.js","SingleColor.js","App.js","index.js"],"names":["componentToHex","c","hex","toString","length","rgbToHex","r","g","b","SingleColor","rgb","weight","index","useState","alert","setAlert","bcg","join","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","Fragment","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAA,SAASA,EAAeC,GACtB,IAAIC,EAAMD,EAAEE,SAAS,IACrB,OAAqB,GAAdD,EAAIE,OAAc,IAAMF,EAAMA,EAOxBG,MAJf,SAAkBC,EAAGC,EAAGC,GACtB,MAAO,IAAMR,EAAeM,GAAKN,EAAeO,GAAKP,EAAeQ,ICuBvDC,EA1BK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAAY,EAClBC,oBAAS,GADS,mBACrCC,EADqC,KAC9BC,EAD8B,KAEtCC,EAAMN,EAAIO,KAAK,KACff,EAAMG,EAAQ,WAAR,cAAYK,IAOxB,OANAQ,qBAAU,WACN,IAAMC,EAAUC,YAAW,WACvBL,GAAS,KACV,KACH,OAAO,kBAAMM,aAAaF,MAC3B,CAACL,IAEA,6BACIQ,UAAS,gBAAWV,EAAQ,IAAM,eAClCW,MAAO,CAAEC,gBAAgB,OAAD,OAASR,EAAT,MACxBS,QAAS,WACLV,GAAS,GACTW,UAAUC,UAAUC,UAAU1B,KAGlC,uBAAGoB,UAAU,iBAAiBX,EAA9B,KACA,uBAAGW,UAAU,eAAepB,GAC3BY,GAAS,uBAAGQ,UAAU,SAAb,yB,gBCuBPO,MA1Cf,WAAgB,IAAD,EACehB,mBAAS,IADxB,mBACJiB,EADI,KACGC,EADH,OAEelB,oBAAS,GAFxB,mBAEJmB,EAFI,KAEGC,EAFH,OAGapB,mBAAS,IAAIqB,IAAO,WAAWC,IAAI,KAHhD,mBAGJC,EAHI,KAGEC,EAHF,KAgBX,OACI,kBAAC,IAAMC,SAAP,KACI,6BAAShB,UAAU,aACf,+CACA,0BAAMiB,SAfG,SAACC,GAClBA,EAAEC,iBACF,IACI,IAAIC,EAAS,IAAIR,IAAOJ,GAAOK,IAAI,IACnCE,EAAQK,GACRT,GAAS,GACX,MAAOD,GACLC,GAAS,GAEbU,QAAQC,IAAI,WAOA,2BACIC,KAAK,OACLC,MAAOhB,EACPiB,SAAU,SAACP,GAAD,OAAOT,EAASS,EAAEQ,OAAOF,QACnCG,YAAY,UACZ3B,UAAS,UAAKU,EAAQ,QAAU,QAEpC,4BAAQV,UAAU,MAAMuB,KAAK,UAA7B,YAKR,6BAASvB,UAAU,UACdc,EAAKc,KAAI,SAACpB,EAAOlB,GACd,OAAO,kBAAC,EAAD,eAAauC,IAAKvC,GAAWkB,EAA7B,CAAoClB,MAAOA,WCnCtEwC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.8aaa0af7.chunk.js","sourcesContent":["function componentToHex(c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? '0' + hex : hex;\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n}\n\nexport default rgbToHex;\n","import React, { useState, useEffect } from \"react\";\nimport rgbToHex from \"./utils\";\n\nconst SingleColor = ({ rgb, weight, index }) => {\n    const [alert, setAlert] = useState(false);\n    const bcg = rgb.join(\",\");\n    const hex = rgbToHex(...rgb);\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            setAlert(false);\n        }, 2000);\n        return () => clearTimeout(timeout);\n    }, [alert]);\n    return (\n        <article\n            className={`color ${index > 10 && \"color-light\"}`}\n            style={{ backgroundColor: `rgb(${bcg})` }}\n            onClick={() => {\n                setAlert(true);\n                navigator.clipboard.writeText(hex);\n            }}\n        >\n            <p className=\"percent-value\">{weight}%</p>\n            <p className=\"color-value\">{hex}</p>\n            {alert && <p className=\"alert\">copied to clipboard</p>}\n        </article>\n    );\n};\n\nexport default SingleColor;\n","import React, { useState } from \"react\";\nimport SingleColor from \"./SingleColor\";\n\nimport Values from \"values.js\";\n\nfunction App() {\n    const [color, setColor] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [list, setList] = useState(new Values(\"#f15025\").all(10));\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        try {\n            let colors = new Values(color).all(10);\n            setList(colors);\n            setError(false);\n        } catch (error) {\n            setError(true);\n        }\n        console.log(\"hello\");\n    };\n    return (\n        <React.Fragment>\n            <section className=\"container\">\n                <h3>color generator</h3>\n                <form onSubmit={handleSubmit}>\n                    <input\n                        type=\"text\"\n                        value={color}\n                        onChange={(e) => setColor(e.target.value)}\n                        placeholder=\"#f15025\"\n                        className={`${error ? \"error\" : null}`}\n                    />\n                    <button className=\"btn\" type=\"submit\">\n                        submit\n                    </button>\n                </form>\n            </section>\n            <section className=\"colors\">\n                {list.map((color, index) => {\n                    return <SingleColor key={index} {...color} index={index} />;\n                })}\n            </section>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}